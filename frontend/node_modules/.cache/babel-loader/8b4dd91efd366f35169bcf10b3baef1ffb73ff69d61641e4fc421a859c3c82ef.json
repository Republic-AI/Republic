{"ast":null,"code":"var _jsxFileName = \"/Users/kyohi/Republic/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactFlow, { addEdge, Background, Controls, MiniMap, useEdgesState, useNodesState } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport NodeConfigPanel from './NodeConfigPanel.jsx';\nimport { initialNodes, initialEdges } from './initialData';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  // 当连线被创建时触发\n  const onConnect = params => {\n    setEdges(eds => addEdge(params, eds));\n  };\n\n  // 点击 \"Run Flow\"\n  const handleRunFlow = async () => {\n    try {\n      // 把 React Flow 的节点、edges 转化成 orchestrator 所需的简单结构\n      // 这里我们假设 data={ type, inputText } 放在 node.data\n      const requestBody = {\n        nodes: nodes.map(n => ({\n          id: n.id,\n          type: n.data.type,\n          // \"python-llm\" or \"node-llm\"\n          inputText: n.data.inputText // user input\n        })),\n        edges: edges.map(e => ({\n          source: e.source,\n          target: e.target\n        }))\n      };\n      const resp = await axios.post(\"http://localhost:3000/execute-flow\", requestBody);\n      alert(JSON.stringify(resp.data, null, 2));\n    } catch (error) {\n      console.error(error);\n      alert(\"Error: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        zIndex: 10,\n        top: 10,\n        left: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(NodeConfigPanel, {\n        nodes: nodes,\n        setNodes: setNodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRunFlow,\n        children: \"Run Flow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LGlvb2RkHQi1LdQhfIf81+ZTXtg=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactFlow","addEdge","Background","Controls","MiniMap","useEdgesState","useNodesState","NodeConfigPanel","initialNodes","initialEdges","axios","jsxDEV","_jsxDEV","App","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","onConnect","params","eds","handleRunFlow","requestBody","map","n","id","type","data","inputText","e","source","target","resp","post","alert","JSON","stringify","error","console","message","style","width","height","children","position","zIndex","top","left","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fitView","_c","$RefreshReg$"],"sources":["/Users/kyohi/Republic/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, {\n  addEdge,\n  Background,\n  Controls,\n  MiniMap,\n  useEdgesState,\n  useNodesState\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport NodeConfigPanel from './NodeConfigPanel.jsx';\nimport { initialNodes, initialEdges } from './initialData';\nimport axios from 'axios';\n\nexport default function App() {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  // 当连线被创建时触发\n  const onConnect = (params) => {\n    setEdges((eds) => addEdge(params, eds));\n  };\n\n  // 点击 \"Run Flow\"\n  const handleRunFlow = async () => {\n    try {\n      // 把 React Flow 的节点、edges 转化成 orchestrator 所需的简单结构\n      // 这里我们假设 data={ type, inputText } 放在 node.data\n      const requestBody = {\n        nodes: nodes.map(n => ({\n          id: n.id,\n          type: n.data.type,          // \"python-llm\" or \"node-llm\"\n          inputText: n.data.inputText // user input\n        })),\n        edges: edges.map(e => ({\n          source: e.source,\n          target: e.target\n        }))\n      };\n\n      const resp = await axios.post(\"http://localhost:3000/execute-flow\", requestBody);\n      alert(JSON.stringify(resp.data, null, 2));\n    } catch (error) {\n      console.error(error);\n      alert(\"Error: \" + error.message);\n    }\n  };\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      <div style={{ position: 'absolute', zIndex: 10, top: 10, left: 10 }}>\n        <NodeConfigPanel nodes={nodes} setNodes={setNodes} />\n        <button onClick={handleRunFlow}>Run Flow</button>\n      </div>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        fitView\n      >\n        <Background />\n        <Controls />\n        <MiniMap />\n      </ReactFlow>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}