{"ast":null,"code":"import React,{useState}from'react';import ReactFlow,{addEdge,Background,Controls,MiniMap,useEdgesState,useNodesState}from'reactflow';import'reactflow/dist/style.css';import NodeConfigPanel from'./NodeConfigPanel.jsx';import{initialNodes,initialEdges}from'./initialData';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[nodes,setNodes,onNodesChange]=useNodesState(initialNodes);const[edges,setEdges,onEdgesChange]=useEdgesState(initialEdges);// 当连线被创建时触发\nconst onConnect=params=>{setEdges(eds=>addEdge(params,eds));};// 点击 \"Run Flow\"\nconst handleRunFlow=async()=>{try{// 把 React Flow 的节点、edges 转化成 orchestrator 所需的简单结构\n// 这里我们假设 data={ type, inputText } 放在 node.data\nconst requestBody={nodes:nodes.map(n=>({id:n.id,type:n.data.type,// \"python-llm\" or \"node-llm\"\ninputText:n.data.inputText// user input\n})),edges:edges.map(e=>({source:e.source,target:e.target}))};const resp=await axios.post(\"http://localhost:3000/execute-flow\",requestBody);alert(JSON.stringify(resp.data,null,2));}catch(error){console.error(error);alert(\"Error: \"+error.message);}};return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100vw',height:'100vh'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{position:'absolute',zIndex:10,top:10,left:10},children:[/*#__PURE__*/_jsx(NodeConfigPanel,{nodes:nodes,setNodes:setNodes}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRunFlow,children:\"Run Flow\"})]}),/*#__PURE__*/_jsxs(ReactFlow,{nodes:nodes,edges:edges,onNodesChange:onNodesChange,onEdgesChange:onEdgesChange,onConnect:onConnect,fitView:true,children:[/*#__PURE__*/_jsx(Background,{}),/*#__PURE__*/_jsx(Controls,{}),/*#__PURE__*/_jsx(MiniMap,{})]})]});}","map":{"version":3,"names":["React","useState","ReactFlow","addEdge","Background","Controls","MiniMap","useEdgesState","useNodesState","NodeConfigPanel","initialNodes","initialEdges","axios","jsx","_jsx","jsxs","_jsxs","App","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","onConnect","params","eds","handleRunFlow","requestBody","map","n","id","type","data","inputText","e","source","target","resp","post","alert","JSON","stringify","error","console","message","style","width","height","children","position","zIndex","top","left","onClick","fitView"],"sources":["/Users/kyohi/Republic/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, {\n  addEdge,\n  Background,\n  Controls,\n  MiniMap,\n  useEdgesState,\n  useNodesState\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport NodeConfigPanel from './NodeConfigPanel.jsx';\nimport { initialNodes, initialEdges } from './initialData';\nimport axios from 'axios';\n\nexport default function App() {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  // 当连线被创建时触发\n  const onConnect = (params) => {\n    setEdges((eds) => addEdge(params, eds));\n  };\n\n  // 点击 \"Run Flow\"\n  const handleRunFlow = async () => {\n    try {\n      // 把 React Flow 的节点、edges 转化成 orchestrator 所需的简单结构\n      // 这里我们假设 data={ type, inputText } 放在 node.data\n      const requestBody = {\n        nodes: nodes.map(n => ({\n          id: n.id,\n          type: n.data.type,          // \"python-llm\" or \"node-llm\"\n          inputText: n.data.inputText // user input\n        })),\n        edges: edges.map(e => ({\n          source: e.source,\n          target: e.target\n        }))\n      };\n\n      const resp = await axios.post(\"http://localhost:3000/execute-flow\", requestBody);\n      alert(JSON.stringify(resp.data, null, 2));\n    } catch (error) {\n      console.error(error);\n      alert(\"Error: \" + error.message);\n    }\n  };\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      <div style={{ position: 'absolute', zIndex: 10, top: 10, left: 10 }}>\n        <NodeConfigPanel nodes={nodes} setNodes={setNodes} />\n        <button onClick={handleRunFlow}>Run Flow</button>\n      </div>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        fitView\n      >\n        <Background />\n        <Controls />\n        <MiniMap />\n      </ReactFlow>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}